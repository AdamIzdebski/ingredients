% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_ceteris_paribus.R
\name{plot.ceteris_paribus_explainer}
\alias{plot.ceteris_paribus_explainer}
\title{Plots Individual Variable Profile Explanations}
\usage{
\method{plot}{ceteris_paribus_explainer}(x, ..., size = 0.5,
  alpha = 0.8, color = "black", only_numerical = TRUE,
  facet_ncol = NULL, selected_variables = NULL)
}
\arguments{
\item{x}{a ceteris paribus explainer produced with function `ceteris_paribus()`}

\item{...}{other explainers that shall be plotted together}

\item{size}{a numeric. Size of lines to be plotted}

\item{alpha}{a numeric between 0 and 1. Opacity of lines}

\item{color}{a character. Either name of a color or name of a variable that should be used for coloring}

\item{only_numerical}{a logical. If TRUE then only numerical variables will be plotted. If FALSE then only categorical variables will be plotted.}

\item{facet_ncol}{number of columns for the `facet_wrap()`}

\item{selected_variables}{if not NULL then only `selected_variables` will be presented}
}
\value{
a ggplot2 object
}
\description{
Function 'plot.ceteris_paribus_explainer' plots Individual Variable Profiles for selected observations.
Various parameters help to decide what should be plotted, profiles, aggregated profiles, points or rugs.
}
\examples{
library("DALEX2")
 \dontrun{
library("randomForest")
set.seed(59)

apartments_rf <- randomForest(m2.price ~ construction.year + surface + floor +
                                no.rooms + district, data = apartments)
explainer_rf <- explain(apartments_rf,
                        data = apartments_test[,2:6], y = apartments_test$m2.price)

apartments_lm <- lm(m2.price ~ construction.year + surface + floor +
                                no.rooms + district, data = apartments)
explainer_lm <- explain(apartments_lm,
                        data = apartments_test[,2:6], y = apartments_test$m2.price)

library("e1071")
apartments_svm <- svm(m2.price ~ construction.year + surface + floor +
                                no.rooms + district, data = apartments)
explainer_svm <- explain(apartments_svm,
                        data = apartments_test[,2:6], y = apartments_test$m2.price)

# individual explanations
my_apartment <- apartments_test[1, ]

# for random forest
lp_rf <- ceteris_paribus(explainer_rf, my_apartment)
lp_rf

plot(lp_rf)

# for others
lp_lm <- ceteris_paribus(explainer_lm, my_apartment)
plot(lp_rf, lp_lm, color = "_label_")

# for others
lp_svm <- ceteris_paribus(explainer_svm, my_apartment)
plot(lp_rf, lp_lm, lp_svm, color = "_label_")

# --------
# multiclass

HR_rf <- randomForest(status ~ . , data = HR)
explainer_rf <- explain(HR_rf, data = HRTest, y = HRTest)

my_HR <- HRTest[1, ]

lp_rf <- ceteris_paribus(explainer_rf, my_HR)
lp_rf

plot(lp_rf, color = "_label_")
}
}
